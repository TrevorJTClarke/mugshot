var MUG=angular.module("mugshot",["ui.router","mugtemplates"]);MUG.constant("Config",{ENV:"STAGE",STAGE:{},PROD:{}}),MUG.run(["$rootScope","$http",function(e,n){var t=n.defaults.headers.common;t["Content-Type"]="application/json"}]),MUG.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,n,t){t.html5Mode({enabled:!0,requireBase:!1}),e.state("main",{url:"/",templateUrl:"project-settings.html"}).state("runner",{url:"/runner",templateUrl:"preloader.html"}),n.otherwise("/")}]),MUG.controller("MainCtrl",["$rootScope","$scope","Config","$http",function(e,n,t,r){}]),MUG.controller("ProjectSettingsCtrl",["$rootScope","$scope","Config","$http",function(e,n,t,r){}]),MUG.directive("fadeIn",[function(){return{restrict:"A",link:function(e,n,t){var r=parseInt(t.fadeIn)||10;n.addClass("fade-in"),setTimeout(function(){n.css("opacity","1")},r)}}}]),MUG.directive("msgCenter",["$rootScope","$timeout","$compile",function(e,n,t){return{scope:{},link:function(r,o,i,a){function s(e){var o=+new Date,i=e.msg,a=e.icon?e.icon:p,s=d.replace("BODY",i).replace("ICON",a),v=t(s)(r);v[0].id=o,g=o,m.append(v);var h=m.find("#"+o);c(h,e.type),e.callback&&h.find(".msg-action").addClass("show"),n(function(){h.addClass("add")},20),l=n(function(){u(h)},f)}function u(e){if(!e&&g)e=m.find("#"+g);else if(!e)return;e.removeClass("add"),e.addClass("remove"),n(function(){angular.element(e).remove()},300)}function c(e,n){e.removeClass("msg-info"),e.removeClass("msg-warn"),n&&e.addClass("msg-"+n)}var l,d='<div class="msg" ng-click="action()"><div class="msg-icn"><i class="iw i-ICON"></i></div><div class="msg-cont">BODY</div><div class="msg-action"><i class="ib i-r-arrow"></i></div></div>',m=angular.element(o),f=5e3,g="",p="info";r.body="",r.callback=null,r.icon=p,r.action=function(){var e=m.find("#"+this.id);r.callback(),u(e)},e.$on("MSGCENTER:FIRE",function(e,n){n.msg&&(window.clearTimeout(l),u(),n.dur&&(f=1e3*n.dur),n.callback&&(r.callback=n.callback),s(n))})}}}]),MUG.directive("timeAgo",["timeAgoService","nowTimeService",function(e,n){return{restrict:"EA",link:function(t,r,o){var i;o.$observe("fromTime",function(n){i=e.parse(n)}),t.$watch(function(){return n.getTime()-i},function(n){angular.element(r).text(e.inWords(n))})}}}]),MUG.factory("nowTime",["$timeout",function(e){var n=Date.now(),t=function(){e(function(){n=Date.now(),t()},1e3)};return t(),{getTime:function(){return n}}}]),MUG.factory("timeAgo",function(){function e(e){var n=e.toString().slice(0,13);return 13==n.length?parseInt(n):e}var n={};return n.settings={refreshMillis:6e4,allowFuture:!1,strings:{prefixAgo:null,prefixFromNow:null,suffixAgo:"ago",suffixFromNow:"from now",seconds:"less than a minute",minute:"about a minute",minutes:"%d minutes",hour:"about an hour",hours:"%d hours",day:"a day",days:"%d days",month:"about a month",months:"%d months",year:"about a year",years:"%d years",numbers:[]}},n.inWords=function(e){function t(n,t){var o=angular.isFunction(n)?n(t,e):n,i=r.numbers&&r.numbers[t]||t;return o.replace(/%d/i,i)}var r=n.settings.strings,o=r.prefixAgo,i=r.suffixAgo;n.settings.allowFuture&&0>e&&(o=r.prefixFromNow,i=r.suffixFromNow);var a=Math.abs(e)/1e3,s=a/60,u=s/60,c=u/24,l=c/365,d=45>a&&t(r.seconds,Math.round(a))||90>a&&t(r.minute,1)||45>s&&t(r.minutes,Math.round(s))||90>s&&t(r.hour,1)||24>u&&t(r.hours,Math.round(u))||42>u&&t(r.day,1)||30>c&&t(r.days,Math.round(c))||45>c&&t(r.month,1)||365>c&&t(r.months,Math.round(c/30))||1.5>l&&t(r.year,1)||t(r.years,Math.round(l)),m=void 0===r.wordSeparator?" ":r.wordSeparator;return[o,d,i].join(m).trim()},n.parse=function(n){if(angular.isNumber(n)){n+="";var t=e(n);return parseInt(t,10)}var r=(n||"").trim();return r=r.replace(/\.\d+/,""),r=r.replace(/-/,"/").replace(/-/,"/"),r=r.replace(/T/," ").replace(/Z/," UTC"),r=r.replace(/([\+\-]\d\d)\:?(\d\d)/," $1$2"),new Date(r)},n}),MUG.filter("timeAgo",["nowTime","timeAgo",function(e,n){return function(t){var r=n.parse(t),o=e.getTime()-r;return n.inWords(o)}}]);
//# sourceMappingURL=data:application/json;base64,